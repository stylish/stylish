{"version":3,"sources":["webpack:///./src/dashboard/App.js?81c6","webpack:///external \"json-colorz\"?c5a5"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAIa;;;AASX,YATW,GASX,GAAuB;SAAX,6DAAO,kBAAI;yCATZ,KASY;SACf,UAA6B,KAA7B,QADe;SACN,UAAoB,KAApB,QADM;SACG,SAAW,KAAX,OADH;;AAErB,SAAI,QAAQ,kBAAK,IAAL,EAAW,QAAX,EAAqB,SAArB,EAAgC,SAAhC,CAAR,CAFiB;;8FATZ,gBAaH,QAJe;;AAMrB,WAAK,OAAL,GAAe,OAAf,CANqB;AAOrB,WAAK,MAAL,GAAc,MAAd,CAPqB;AAQrB,WAAK,GAAL,GAAW,OAAO,GAAP,CAAW,IAAX,CAAgB,MAAhB,CAAX,CARqB;;IAAvB;;8BATW;;uCAoBQ;AACjB,cAAO;AACL,kBAAS,KAAK,OAAL;AACT,iBAAQ,KAAK,MAAL;AACR,mBAAU,KAAK,OAAL,CAAa,QAAb;AACV,cAAK,KAAK,GAAL;AACL,oBAAW,KAAK,SAAL;QALb,CADiB;;;;8BAUT;AACR,cACE;;kCAAK,OAAM,UAAN,IAAsB,aAAa,EAAC,OAAO,SAAP,EAAkB,OAAO,MAAP,EAAhC;;;;;WAA3B;SACG,0BAAM,KAAK,OAAL,CADT;QADF,CADQ;;;UA9BC;;;KACJ,oBAAoB;AACzB,YAAS,iBAAM,MAAN;AACT,WAAQ,iBAAM,MAAN;AACR,aAAU,iBAAM,MAAN;AACV,cAAW,iBAAM,MAAN;AACX,QAAK,iBAAM,IAAN;;mBAiCM;;;AAGf,UAAS,YAAT,GAAiE;OAA3C,gEAAU,EAAC,OAAO,MAAP,EAAe,OAAO,OAAP,kBAAiB;OAC1D,QAAgB,QAAhB,MAD0D;OACnD,QAAS,QAAT,MADmD;;;AAG/D,UAAO;AACL,aAAS;AACP,aAAM,KAAN;MADF;AAGA,YAAQ;AACN,eAAQ;AACN,aAAI,KAAJ;QADF;MADF;IAJF,CAH+D;;;;;;;;AC9CjE,yC","file":"0.82ecc86706984ff48812.hot-update.js","sourcesContent":["import React, { Component, PropTypes as types } from 'react'\nimport { omit, defaultsDeep } from 'lodash'\nimport jclrz from 'json-colorz'\n\nexport class App extends Component {\n  static childContextTypes = {\n    project: types.object,\n    screen: types.object,\n    settings: types.object,\n    processes: types.object,\n    log: types.func\n  }\n\n  constructor(args = {}) {\n    let { options, project, screen } = args\n    let props = omit(args, 'screen', 'project', 'options')\n\n    super(props)\n\n    this.project = project\n    this.screen = screen\n    this.log = screen.log.bind(screen)\n  }\n\n  getChildContext () {\n    return {\n      project: this.project,\n      screen: this.screen,\n      settings: this.project.settings,\n      log: this.log,\n      processes: this.processes\n    }\n  }\n\n  render () {\n    return(\n      <box label='skypager' {...(borderStyles({color: 'magenta', style: 'line'}))}>\n        {jclrz(this.project)}\n      </box>\n    )\n  }\n}\n\nexport default App\n\n\nfunction borderStyles(options = {style: 'line', color: 'white'}) {\n  let {style, color} = options\n\n  return {\n    border : {\n      type: style\n    },\n    style : {\n      border: {\n        fg: color\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dashboard/App.js\n **/","module.exports = require(\"json-colorz\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"json-colorz\"\n ** module id = 98\n ** module chunks = 0\n **/"],"sourceRoot":""}