{"version":3,"sources":["webpack:///./src/dashboard/components/CommandLogger.js?d0f8"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAIa;;;;;;;;;;yCACU;oBACI,KAAK,KAAL,CADJ;WACb,yBADa;WACJ,iBADI;;;AAGnB,YAAK,GAAL,GAAW,KAAK,IAAL,CAAU,GAAV,CAHQ;;AAKnB,eAAQ,GAAR,CAAY,gBAAZ,EAA8B,GAA9B,EALmB;;AAOnB,WAAI,GAAJ,EAAS;AACP,cAAK,IAAL,GAAY;AACV;YACG;AACH,iBAAM,cAAC,OAAD,EAAa;AACjB,iBAAI,GAAJ,CAAQ,OAAR,EADiB;YAAb;WAHI,CAAZ,CADO;QAAT;;;;4CAWsB;AACrB,YAAK,IAAL,IAAa,KAAK,IAAL,CAAU,IAAV,EAAb,CADqB;;;;8BAId;AACR,cACE,uCAAK,KAAI,KAAJ,EAAU;;;;QAAf,CADF,CADQ;;;UAvBC;;;mBA8BE,c","file":"0.8444fe59675c7d92e32c.hot-update.js","sourcesContent":["import React, { Component } from 'react'\nimport { defaults } from 'lodash'\nimport { shell } from '../../util'\n\nexport class CommandLogger extends Component {\n  componentDidMount () {\n    let { options, cmd } = this.props\n\n    this.log = this.refs.log\n\n    console.log('command logger', cmd)\n\n    if (cmd) {\n      this.proc = shell({\n        cmd,\n        ...options,\n        data: (content) => {\n          log.add(content)\n        }\n      })\n    }\n  }\n\n  componentWillUnmount () {\n     this.proc && this.proc.kill()\n  }\n\n  render () {\n    return (\n      <log ref='log' scrollable />\n    )\n  }\n}\n\nexport default CommandLogger\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dashboard/components/CommandLogger.js\n **/"],"sourceRoot":""}