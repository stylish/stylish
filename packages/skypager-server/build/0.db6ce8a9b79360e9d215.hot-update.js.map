{"version":3,"sources":["webpack:///./src/dashboard/index.js?9b5d"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAO,OAAP,GAAiB,UAAU,OAAV,EAAiC;OAAd,gEAAU,kBAAI;;;AAEhD,OAAM,SAAS,kBAAQ,MAAR,CAAe;AAC5B,kBAAa,IAAb;AACA,eAAU,IAAV;AACA,YAAO,UAAP;AACA,kBAAa,IAAb;IAJa,CAAT;;;AAF0C,SAUhD,CAAO,GAAP,CAAW,CAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,CAAX,EAAmC,UAAS,EAAT,EAAa,GAAb,EAAkB;AACnD,YAAO,QAAQ,IAAR,CAAa,CAAb,CAAP,CADmD;IAAlB,CAAnC;;;AAVgD,4BAehD,CAAO,+CAAK,SAAS,OAAT,EAAkB,SAAS,OAAT,EAAkB,QAAQ,MAAR;;;;IAAzC,CAAP,EAAoE,MAApE;;;;AAfgD,UAmBhD,CAAQ,IAAR,GAAe,YAAY,EAAZ,CAnBiC;AAoBhD,WAAQ,KAAR,GAAgB,YAAY,EAAZ,CApBgC;AAqBhD,WAAQ,IAAR,GAAe,YAAY,EAAZ,CArBiC;AAsBhD,WAAQ,KAAR,GAAgB,YAAY,EAAZ;;;;;;;AAtBgC,cA6BhD,CAAY,YAAM,EAAN,EAAU,IAAtB,EA7BgD;EAAjC,C","file":"0.db6ce8a9b79360e9d215.hot-update.js","sourcesContent":["import React from 'react';\nimport blessed from 'blessed';\nimport { render } from 'react-blessed';\nimport App from './App';\n\nmodule.exports = function (project, options = {}) {\n   // Create our screen\n  const screen = blessed.screen({\n    autoPadding: true,\n    smartCSR: true,\n    title: 'Skypager',\n    dockBorders: true\n  });\n\n  // Let user quit the app\n  screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n    return process.exit(0);\n  });\n\n  // Render React component into screen\n  render(<App options={options} project={project} screen={screen} />, screen);\n\n  // Don't overwrite the screen\n  //console.log = function () { };\n  console.warn = function () { };\n  console.error = function () { };\n  console.info = function () { };\n  console.debug = function () { };\n\n  // Listen to SIGUSR2 indicating hot updates:\n  //require('./signal')\n\n  // This is dumb but I don't understand how else to prevent process from exiting.\n  // If it exits, it will get restarted by nodemon, but then hot reloading won't work.\n  setInterval(() => {}, 1000);\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dashboard/index.js\n **/"],"sourceRoot":""}