'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.available = available;
exports.handle = handle;

var _util = require('../util');

function available(program, dispatch) {
  program.command('available [helperType]').description('list available helpers in this project').option('--type <helperType>', 'the type of helpers you want to list. valid options are action, context, exporter, importer, model, plugin, renderer, store, view').action(dispatch(handle));
}

exports.default = available;
function handle(type) {
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
  var context = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  var helperType = type || options.type;
  var project = context.project;

  helperType = (0, _util.pluralize)(helperType).toLowerCase();

  console.log(('Available ' + helperType).green + ':');

  var registry = project.registries[helperType];

  registry.available.sort().forEach(function (val) {
    console.log(val);
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9hdmFpbGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFFZ0IsU0FBUyxHQUFULFNBQVM7UUFVVCxNQUFNLEdBQU4sTUFBTTs7OztBQVZmLFNBQVMsU0FBUyxDQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUU7QUFDNUMsU0FBTyxDQUNKLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUNqQyxXQUFXLENBQUMsd0NBQXdDLENBQUMsQ0FDckQsTUFBTSxDQUFDLHFCQUFxQixFQUFFLG1JQUFtSSxDQUFDLENBQ2xLLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQTtDQUM1Qjs7a0JBRWMsU0FBUztBQUVqQixTQUFTLE1BQU0sQ0FBQyxJQUFJLEVBQThCO01BQTVCLE9BQU8seURBQUcsRUFBRTtNQUFFLE9BQU8seURBQUcsRUFBRTs7QUFDckQsTUFBSSxVQUFVLEdBQUcsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUE7TUFDL0IsT0FBTyxHQUFLLE9BQU8sQ0FBbkIsT0FBTzs7QUFFYixZQUFVLEdBQUcsVUFoQk4sU0FBUyxFQWdCTyxVQUFVLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTs7QUFFaEQsU0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBYyxVQUFVLEVBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFBOztBQUVwRCxNQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFBOztBQUU3QyxVQUFRLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFBLEdBQUcsRUFBSTtBQUN2QyxXQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0dBQ2pCLENBQUMsQ0FBQTtDQUNIIiwiZmlsZSI6ImF2YWlsYWJsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBsdXJhbGl6ZSB9IGZyb20gJy4uL3V0aWwnXG5cbmV4cG9ydCBmdW5jdGlvbiBhdmFpbGFibGUgKHByb2dyYW0sIGRpc3BhdGNoKSB7XG4gIHByb2dyYW1cbiAgICAuY29tbWFuZCgnYXZhaWxhYmxlIFtoZWxwZXJUeXBlXScpXG4gICAgLmRlc2NyaXB0aW9uKCdsaXN0IGF2YWlsYWJsZSBoZWxwZXJzIGluIHRoaXMgcHJvamVjdCcpXG4gICAgLm9wdGlvbignLS10eXBlIDxoZWxwZXJUeXBlPicsICd0aGUgdHlwZSBvZiBoZWxwZXJzIHlvdSB3YW50IHRvIGxpc3QuIHZhbGlkIG9wdGlvbnMgYXJlIGFjdGlvbiwgY29udGV4dCwgZXhwb3J0ZXIsIGltcG9ydGVyLCBtb2RlbCwgcGx1Z2luLCByZW5kZXJlciwgc3RvcmUsIHZpZXcnKVxuICAgIC5hY3Rpb24oZGlzcGF0Y2goaGFuZGxlKSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXZhaWxhYmxlXG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGUodHlwZSwgb3B0aW9ucyA9IHt9LCBjb250ZXh0ID0ge30pIHtcbiAgbGV0IGhlbHBlclR5cGUgPSB0eXBlIHx8IG9wdGlvbnMudHlwZVxuICBsZXQgeyBwcm9qZWN0IH0gPSBjb250ZXh0XG5cbiAgaGVscGVyVHlwZSA9IHBsdXJhbGl6ZShoZWxwZXJUeXBlKS50b0xvd2VyQ2FzZSgpXG5cbiAgY29uc29sZS5sb2coYEF2YWlsYWJsZSAkeyBoZWxwZXJUeXBlIH1gLmdyZWVuICsgJzonKVxuXG4gIGxldCByZWdpc3RyeSA9IHByb2plY3QucmVnaXN0cmllc1toZWxwZXJUeXBlXVxuXG4gIHJlZ2lzdHJ5LmF2YWlsYWJsZS5zb3J0KCkuZm9yRWFjaCh2YWwgPT4ge1xuICAgIGNvbnNvbGUubG9nKHZhbClcbiAgfSlcbn1cbiJdfQ==